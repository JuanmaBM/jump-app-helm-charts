{{- range $key, $val := $.Values.global.apps }}
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pipeline-{{ $key }}-build
spec:
  resources:
    - name: source-repo
      type: git
    - name: functional-test-repo
      type: git
  params:
    - name: git-branch  
      type: string
    - name: git-commit
      type: string
  tasks:
    - name: app-test
      taskRef:
        name: task-{{ $val.type }}-new-commit-test
      resources:
        inputs:
          - name: workspace
            resource: source-repo
    - name: app-build-dev
      conditions:
        - conditionRef: "is-development"
          params:
            - name: "branch"
              value: "$(params.git-branch)"
      taskRef:
        name: task-new-commit-start-build-tag
      runAfter:
        - app-test
      params:
        - name: buildconfig
          value: '{{ $key }}-dev'
        - name: commit
          value: "$(params.git-commit)"
    - name: app-image-tag-commit-dev
      taskRef:
        name: task-new-commit-image-tag
      resources:
        inputs:
          - name: workspace
            resource: source-repo
      runAfter:
        - app-build-dev
      params:
        - name: imagestream
          value: '{{ $key }}'   
        - name: branch
          value: "{{ $.Values.gitBranchDev }}"
        - name: commit
          value: "$(params.git-commit)"
    - name: app-image-deploy-by-argocd-dev
      taskRef:
        name: task-new-commit-image-deploy-by-argocd
      runAfter:
        - app-image-tag-commit-dev
      params:
        - name: app
          value: '{{ $key }}'   
        - name: argoapp
          value: "{{ $.Values.namespaceDev }}"
        - name: commit
          value: "$(params.git-commit)"
    - name: app-image-deployment-test-dev
      taskRef:
        name: task-new-commit-image-deployment-test
      runAfter:
        - app-image-deploy-by-argocd-dev
      params:
        - name: namespace
          value: "{{ $.Values.namespaceDev }}"
        - name: deployment
          value: "{{ $key }}"
        - name: version
          value: "v1"
        - name: commit
          value: "$(params.git-commit)"
    - name: app-build-pre
      conditions:
        - conditionRef: "is-production"
          params:
            - name: "branch"
              value: "$(params.git-branch)"
      taskRef:
        name: task-new-commit-start-build-tag
      runAfter:
        - app-test
      params:
        - name: buildconfig
          value: '{{ $key }}-pre'
        - name: commit
          value: "$(params.git-commit)"
    - name: app-image-tag-commit-pre
      taskRef:
        name: task-new-commit-image-tag
      resources:
        inputs:
          - name: workspace
            resource: source-repo
      runAfter:
        - app-build-pre
      params:
        - name: imagestream
          value: '{{ $key }}'    
        - name: branch
          value: "{{ $.Values.gitBranchPro }}"
        - name: commit
          value: "$(params.git-commit)"
    - name: app-image-deploy-by-argocd-pre
      taskRef:
        name: task-new-commit-image-deploy-by-argocd
      runAfter:
        - app-image-tag-commit-pre
      params:
        - name: app
          value: '{{ $key }}'   
        - name: argoapp
          value: "{{ $.Values.namespacePre }}"
        - name: commit
          value: "$(params.git-commit)"
    - name: app-image-deployment-test-pre
      taskRef:
        name: task-new-commit-image-deployment-test
      runAfter:
        - app-image-deploy-by-argocd-pre
      params:
        - name: namespace
          value: "{{ $.Values.namespacePre }}"
        - name: deployment
          value: "{{ $key }}"
        - name: version
          value: "v1"
        - name: commit
          value: "$(params.git-commit)"
    - name: app-functional-tests-pre
      taskRef:
        name: task-new-commit-pre-functional-tests
      resources:
        inputs:
          - name: workspace
            resource: functional-test-repo
      runAfter:
        - app-image-deployment-test-pre
      params:
        - name: appurl
          value: 'https://{{ $.Values.functTestMicro }}-{{ $.Values.namespacePre }}.{{ $.Values.appsDomain }}'
{{- end }}